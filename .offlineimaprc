[general]
#ui = TTY.TTYUI
ui = Curses.Blinkenlights
accounts = gmail
pythonfile=~/bin/offlineimap.py
fsync = False

[Account tlf]
localrepository = tlf-Local
remoterepository = tlf-Remote
status_backend = sqlite
autorefresh = 5
quick = 10

[Account gmail]
localrepository = gmail-Local
remoterepository = gmail-Remote
status_backend = sqlite
autorefresh = 5
quick = 10

[Repository gmail-Local]
type = Maildir
localfolders = ~/.mail/gmail.com
nametrans = lambda folder: {'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository gmail-Remote]
maxconnections = 1
type = Gmail
remoteuser = chip.childers@gmail.com
remotepasseval =  get_keychain_pass(account="chip.childers@gmail.com", server="imap.gmail.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             '[Gmail]/All Mail',
                                             ]

[Repository tlf-Local]
type = Maildir
localfolders = ~/.mail/tlf.org
nametrans = lambda folder: {'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository tlf-Remote]
maxconnections = 1
type = Gmail
remoteuser = cchilders@linuxfoundation.org
remotepasseval =  get_keychain_pass(account="cchilders@linuxfoundation.org", server="imap.gmail.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             '[Gmail]/All Mail',
                                             ]
